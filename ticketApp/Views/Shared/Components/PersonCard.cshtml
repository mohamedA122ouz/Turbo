@model ticketApp.Models.Utility.PersonCard;
@{
    var FocusedButton = ViewData["FocusedButton"] as string;
    var ButtonText = ViewData["ButtonText"] as string;

}
<div class="flex w-full max-w-sm bg-white border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700" style="align-items: center;justify-content: center;">
    <div class="flex flex-col items-center pb-10">
        @if (Model.ImageUrl != null)
        {

            <img class="w-24 h-24 mb-3 rounded-full shadow-lg" src=@Model.ImageUrl alt="@Model.Name image" />
        }
        else
        {
            <div class="w-24 h-24 mb-3 rounded-full bg-gray-200 flex items-center justify-center shadow-lg">
                <span class="text-gray-500" style="font-size: xx-large;">@Model.Name[0].ToString().ToUpper()</span>
            </div>
        }
        <h5 class="mb-1 text-xl font-medium text-gray-900 dark:text-white">@Model.Name</h5>
        <span class="text-sm text-gray-500 dark:text-gray-400">@Model.Message</span>
        <div class="flex mt-4 md:mt-6">
            <a href="@(FocusedButton!=null?FocusedButton:"#")"
                class="inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">@Model.FocusedButton</a>
            <a href="@(ButtonText!=null?ButtonText:"#")"
                class="py-2 px-4 ms-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">@Model.ButtonText</a>
        </div>
    </div>
</div>
